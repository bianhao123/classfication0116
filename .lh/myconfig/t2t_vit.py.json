{
    "sourceFile": "myconfig/t2t_vit.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1672057101815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1672057154509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,4 +31,43 @@\n         num_classes=9,\n         in_channels=768,\n         loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n     ))\n+\n+\n+model = dict(\n+    type='ImageClassifier',\n+    backbone=dict(\n+        type='T2T_ViT',\n+        img_size=224,\n+        in_channels=3,\n+        embed_dims=embed_dims,\n+        t2t_cfg=dict(\n+            token_dims=64,\n+            use_performer=False,\n+        ),\n+        num_layers=14,\n+        layer_cfgs=dict(\n+            num_heads=6,\n+            feedforward_channels=3 * embed_dims,  # mlp_ratio = 3\n+        ),\n+        drop_path_rate=0.1,\n+        init_cfg=[\n+            dict(type='TruncNormal', layer='Linear', std=.02),\n+            dict(type='Constant', layer='LayerNorm', val=1., bias=0.),\n+        ]),\n+    neck=None,\n+    head=dict(\n+        type='VisionTransformerClsHead',\n+        num_classes=num_classes,\n+        in_channels=embed_dims,\n+        loss=dict(\n+            type='LabelSmoothLoss',\n+            label_smooth_val=0.1,\n+            mode='original',\n+        ),\n+        topk=(1, 5),\n+        init_cfg=dict(type='TruncNormal', layer='Linear', std=.02)),\n+    train_cfg=dict(augments=[\n+        dict(type='BatchMixup', alpha=0.8, prob=0.5, num_classes=num_classes),\n+        dict(type='BatchCutMix', alpha=1.0, prob=0.5, num_classes=num_classes),\n+    ]))\n"
                },
                {
                    "date": 1672057213326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,28 +13,36 @@\n \n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n-        type='PoolFormer',\n-        arch='m36',\n+        type='T2T_ViT',\n+        img_size=224,\n+        in_channels=3,\n+        embed_dims=embed_dims,\n+        t2t_cfg=dict(\n+            token_dims=64,\n+            use_performer=False,\n+        ),\n+        num_layers=14,\n+        layer_cfgs=dict(\n+            num_heads=6,\n+            feedforward_channels=3 * embed_dims,  # mlp_ratio = 3\n+        ),\n         drop_path_rate=0.1,\n         init_cfg=[\n-            dict(\n-                type='TruncNormal',\n-                layer=['Conv2d', 'Linear'],\n-                std=.02,\n-                bias=0.),\n-            dict(type='Constant', layer=['GroupNorm'], val=1., bias=0.),\n+            dict(type='TruncNormal', layer='Linear', std=.02),\n+            dict(type='Constant', layer='LayerNorm', val=1., bias=0.),\n         ]),\n     neck=dict(type='GlobalAveragePooling'),\n     head=dict(\n         type='LinearClsHead',\n         num_classes=9,\n         in_channels=768,\n         loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n     ))\n+embed_dims = 384\n+num_classes = 9\n \n-\n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n         type='T2T_ViT',\n@@ -66,8 +74,5 @@\n             mode='original',\n         ),\n         topk=(1, 5),\n         init_cfg=dict(type='TruncNormal', layer='Linear', std=.02)),\n-    train_cfg=dict(augments=[\n-        dict(type='BatchMixup', alpha=0.8, prob=0.5, num_classes=num_classes),\n-        dict(type='BatchCutMix', alpha=1.0, prob=0.5, num_classes=num_classes),\n-    ]))\n+)\n"
                },
                {
                    "date": 1672057229543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n \n checkpoint_config = dict(interval=10)\n log_config = dict(interval=100, hooks=[dict(\n     type='TextLoggerHook'), dict(type='TensorboardLoggerHook')])\n-\n+embed_dims = 384\n+num_classes = 9\n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n         type='T2T_ViT',\n@@ -38,41 +39,4 @@\n         num_classes=9,\n         in_channels=768,\n         loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n     ))\n-embed_dims = 384\n-num_classes = 9\n-\n-model = dict(\n-    type='ImageClassifier',\n-    backbone=dict(\n-        type='T2T_ViT',\n-        img_size=224,\n-        in_channels=3,\n-        embed_dims=embed_dims,\n-        t2t_cfg=dict(\n-            token_dims=64,\n-            use_performer=False,\n-        ),\n-        num_layers=14,\n-        layer_cfgs=dict(\n-            num_heads=6,\n-            feedforward_channels=3 * embed_dims,  # mlp_ratio = 3\n-        ),\n-        drop_path_rate=0.1,\n-        init_cfg=[\n-            dict(type='TruncNormal', layer='Linear', std=.02),\n-            dict(type='Constant', layer='LayerNorm', val=1., bias=0.),\n-        ]),\n-    neck=None,\n-    head=dict(\n-        type='VisionTransformerClsHead',\n-        num_classes=num_classes,\n-        in_channels=embed_dims,\n-        loss=dict(\n-            type='LabelSmoothLoss',\n-            label_smooth_val=0.1,\n-            mode='original',\n-        ),\n-        topk=(1, 5),\n-        init_cfg=dict(type='TruncNormal', layer='Linear', std=.02)),\n-)\n"
                },
                {
                    "date": 1672057260324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n         type='T2T_ViT',\n-        img_size=224,\n+        img_size=32,\n         in_channels=3,\n         embed_dims=embed_dims,\n         t2t_cfg=dict(\n             token_dims=64,\n"
                },
                {
                    "date": 1672057348733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,29 +14,22 @@\n num_classes = 9\n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n-        type='T2T_ViT',\n-        img_size=32,\n-        in_channels=3,\n-        embed_dims=embed_dims,\n-        t2t_cfg=dict(\n-            token_dims=64,\n-            use_performer=False,\n-        ),\n-        num_layers=14,\n-        layer_cfgs=dict(\n-            num_heads=6,\n-            feedforward_channels=3 * embed_dims,  # mlp_ratio = 3\n-        ),\n-        drop_path_rate=0.1,\n-        init_cfg=[\n-            dict(type='TruncNormal', layer='Linear', std=.02),\n-            dict(type='Constant', layer='LayerNorm', val=1., bias=0.),\n-        ]),\n-    neck=dict(type='GlobalAveragePooling'),\n+        type='Conformer', arch='base', drop_path_rate=0.1, init_cfg=None),\n+    neck=None,\n     head=dict(\n-        type='LinearClsHead',\n-        num_classes=9,\n-        in_channels=768,\n-        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n-    ))\n+        type='ConformerHead',\n+        num_classes=1000,\n+        in_channels=[1536, 576],\n+        init_cfg=None,\n+        loss=dict(\n+            type='LabelSmoothLoss', label_smooth_val=0.1, mode='original'),\n+        cal_acc=False),\n+    init_cfg=[\n+        dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.),\n+        dict(type='Constant', layer='LayerNorm', val=1., bias=0.)\n+    ],\n+    train_cfg=dict(augments=[\n+        dict(type='BatchMixup', alpha=0.8, num_classes=1000, prob=0.5),\n+        dict(type='BatchCutMix', alpha=1.0, num_classes=1000, prob=0.5)\n+    ]))\n\\ No newline at end of file\n"
                }
            ],
            "date": 1672057101815,
            "name": "Commit-0",
            "content": "root_path = '/data111/bianhao/code/xy/mmclassification'\n_base_ = [\n    f'{root_path}/configs/_base_/schedules/mydata_bs128.py',\n    f'{root_path}/configs/_base_/datasets/mydata_bs128.py', f'{root_path}/configs/_base_/default_runtime.py'\n]\n\nevaluation = dict(interval=1, metric=[\n                  \"accuracy\", \"precision\", \"recall\", \"f1_score\"])\n\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=100, hooks=[dict(\n    type='TextLoggerHook'), dict(type='TensorboardLoggerHook')])\n\nmodel = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='PoolFormer',\n        arch='m36',\n        drop_path_rate=0.1,\n        init_cfg=[\n            dict(\n                type='TruncNormal',\n                layer=['Conv2d', 'Linear'],\n                std=.02,\n                bias=0.),\n            dict(type='Constant', layer=['GroupNorm'], val=1., bias=0.),\n        ]),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=9,\n        in_channels=768,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n    ))\n"
        }
    ]
}