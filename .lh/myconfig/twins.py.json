{
    "sourceFile": "myconfig/twins.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1672057819238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1673793346125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,20 @@\n root_path = '/data111/bianhao/code/xy/mmclassification'\n _base_ = [\n-    f'{root_path}/configs/_base_/schedules/mydata_bs128.py',\n-    f'{root_path}/configs/_base_/datasets/mydata_bs128.py', f'{root_path}/configs/_base_/default_runtime.py'\n+    f'{root_path}/configs/_base_/schedules/mydata_bs128_resize224.py',\n+    f'{root_path}/configs/_base_/datasets/mydata_bs128_resize224.py', f'{root_path}/configs/_base_/default_runtime.py'\n ]\n \n evaluation = dict(interval=1, metric=[\n                   \"accuracy\", \"precision\", \"recall\", \"f1_score\"])\n \n checkpoint_config = dict(interval=10)\n log_config = dict(interval=100, hooks=[dict(\n     type='TextLoggerHook'), dict(type='TensorboardLoggerHook')])\n+img_norm_cfg = dict(\n+    mean=[0, 0, 0],\n+    std=[255.0, 255.0, 255.0],\n+    to_rgb=False)\n \n model = dict(\n     type='ImageClassifier',\n     backbone=dict(\n@@ -33,5 +37,5 @@\n     init_cfg=[\n         dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.),\n         dict(type='Constant', layer='LayerNorm', val=1., bias=0.)\n     ],\n-)\n+)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1673793356958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,12 +30,17 @@\n         drop_path_rate=0.3),\n     neck=dict(type='GlobalAveragePooling'),\n     head=dict(\n         type='LinearClsHead',\n-        num_classes=9,\n+        num_classes=1000,\n         in_channels=512,\n-        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)),\n+        loss=dict(\n+            type='LabelSmoothLoss', label_smooth_val=0.1, mode='original'),\n+        cal_acc=False),\n     init_cfg=[\n\\ No newline at end of file\n         dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.),\n         dict(type='Constant', layer='LayerNorm', val=1., bias=0.)\n     ],\n-)\n+    train_cfg=dict(augments=[\n+        dict(type='BatchMixup', alpha=0.8, num_classes=1000, prob=0.5),\n+        dict(type='BatchCutMix', alpha=1.0, num_classes=1000, prob=0.5)\n+    ]))\n"
                },
                {
                    "date": 1673793367644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,6 +38,5 @@\n         cal_acc=False),\n     init_cfg=[\n         dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.),\n         dict(type='Constant', layer='LayerNorm', val=1., bias=0.)\n-    ],\n-)\n+    ])\n"
                }
            ],
            "date": 1672057819238,
            "name": "Commit-0",
            "content": "root_path = '/data111/bianhao/code/xy/mmclassification'\n_base_ = [\n    f'{root_path}/configs/_base_/schedules/mydata_bs128.py',\n    f'{root_path}/configs/_base_/datasets/mydata_bs128.py', f'{root_path}/configs/_base_/default_runtime.py'\n]\n\nevaluation = dict(interval=1, metric=[\n                  \"accuracy\", \"precision\", \"recall\", \"f1_score\"])\n\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=100, hooks=[dict(\n    type='TextLoggerHook'), dict(type='TensorboardLoggerHook')])\n\nmodel = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='PCPVT',\n        arch='base',\n        in_channels=3,\n        out_indices=(3, ),\n        qkv_bias=True,\n        norm_cfg=dict(type='LN', eps=1e-06),\n        norm_after_stage=[False, False, False, True],\n        drop_rate=0.0,\n        attn_drop_rate=0.,\n        drop_path_rate=0.3),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=9,\n        in_channels=512,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)),\n    init_cfg=[\n        dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.),\n        dict(type='Constant', layer='LayerNorm', val=1., bias=0.)\n    ],\n)\n"
        }
    ]
}